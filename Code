#Fetch iris dataset from UCI
iris <- read.csv(url("http://archive.ics.uci.edu/ml/machine-learning-databases/iris/iris.data"),
                 header = FALSE)



# Add column names
names(iris) <- c("Sepal.Length", "Sepal.Width", "Petal.Length", "Petal.Width", "Species")


# Return first 5 lines of iris dataset
head(iris)

# Return structure of iris
str(iris)

# Division of Species
table(iris$Species)

# Percentual division of Species
round(prop.table(table(iris$Species)) * 100, digits = 1)
# Summary overview of iris
summary(iris)

# Build normalization function
normalize <- function(x) {
  num <- x - min(x)
  denom <- max(x) - min(x)
  return (num/denom)
}

# Normalize the iris data
iris_norm <- as.data.frame(lapply(iris[1:4], normalize))

# Summarize iris_norm
summary(iris_norm)

#Training And Test Sets

# Compose training set
ind <- sample(2, nrow(iris), replace=TRUE, prob=c(0.67, 0.33))
iris.training <- iris[ind==1, 1:4]

# Inspect training set
head(iris.training)

# Compose test set
iris.test <- iris[ind==2, 1:4]

# Inspect test set
head(iris.test)

# Compose `iris` training labels
iris.trainLabels <- iris[ind==1,5]

# Inspect result
print(iris.trainLabels)

# Compose iris test labels
iris.testLabels <- iris[ind==2, 5]

# Inspect result
print(iris.testLabels)

# Build the model
iris_pred <- class::knn(train = iris.training, test = iris.test, cl = iris.trainLabels, k=3)

# Inspect iris_pred
iris_pred

# Put iris.testLabels in a data frame
irisTestLabels <- data.frame(iris.testLabels)

# Merge iris_pred and iris.testLabels
merge <- data.frame(iris_pred, iris.testLabels)

# Specify column names for merge
names(merge) <- c("Predicted Species", "Observed Species")

# Inspect merge
merge
# evalutaion of the model in a confusion matrix
gmodels::CrossTable(x = iris.testLabels, y = iris_pred, prop.chisq=FALSE)
